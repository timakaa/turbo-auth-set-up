/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from '@grpc/grpc-js';

export namespace auth {
    export interface AuthService {
        // User authentication
        login(
            data: LoginRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<AuthResponse>;
        signUp(
            data: SignUpRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<AuthResponse>;
        logout(
            data: LogoutRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<LogoutResponse>;
        validateGoogleUser(
            data: ValidateGoogleUserRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<ValidateGoogleUserResponse>;
        validateLocalUser(
            data: ValidateLocalUserRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<ValidateLocalUserResponse>;
        validateJwtUser(
            data: ValidateJwtUserRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<ValidateJwtUserResponse>;
        validateRefreshToken(
            data: ValidateRefreshTokenRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<ValidateRefreshTokenResponse>;
        refreshToken(
            data: RefreshTokenRequest,
            metadata?: Metadata,
            ...rest: any[]
        ): Observable<RefreshTokenResponse>;
    }
    // Login
    export interface LoginRequest {
        userId?: number;
        name?: string;
        role?: string;
    }
    export interface AuthResponse {
        id?: number;
        name?: string;
        email?: string;
        role?: string;
        accessToken?: string;
        refreshToken?: string;
    }
    // SignUp
    export interface SignUpRequest {
        name?: string;
        email?: string;
        password?: string;
    }
    export interface SignUpResponse {
        name?: string;
        email?: string;
        password?: string;
    }
    // Logout
    export interface LogoutRequest {
        userId?: number;
    }
    export interface LogoutResponse {
        message?: string;
    }
    // ValidateGoogleUser
    export interface ValidateGoogleUserRequest {
        email?: string;
        name?: string;
        password?: string;
    }
    export interface ValidateGoogleUserResponse {
        id?: string;
        name?: string;
        role?: string;
    }
    // ValidateLocalUser
    export interface ValidateLocalUserRequest {
        email?: string;
        password?: string;
    }
    export interface ValidateLocalUserResponse {
        id?: number;
        name?: string;
        role?: string;
    }
    // ValidateJwtUser
    export interface ValidateJwtUserRequest {
        userId?: number;
    }
    export interface ValidateJwtUserResponse {
        id?: number;
        role?: string;
    }
    // ValidateRefreshToken
    export interface ValidateRefreshTokenRequest {
        userId?: number;
        refreshToken?: string;
    }
    export interface ValidateRefreshTokenResponse {
        id?: number;
    }
    // RefreshToken
    export interface RefreshTokenRequest {
        userId?: number;
        name?: string;
    }
    export interface RefreshTokenResponse {
        id?: number;
        name?: string;
        accessToken?: string;
        refreshToken?: string;
    }
}

